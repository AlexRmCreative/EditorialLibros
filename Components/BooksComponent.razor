@rendermode InteractiveServer

<div class="d-flex col-3 align-items-center ms-5 mt-2">
    <label class="form-label me-2 mb-0 h3" for="genre">Género:</label>
    <select id="genre" class="form-select" @bind="selectedGenre">
        <option value="All">Todos</option>
        @foreach (BookGenre genre in Enum.GetValues(typeof(BookGenre)))
        {
            if (genre != BookGenre.All)
            {
                <option value="@genre">@genre.ToString()</option>
            }
        }
    </select>
</div>

<div class="d-flex flex-wrap mt-3 justify-content-around">
    @foreach (var book in FilteredBooks())
    {
        <div class="card m-2" style="width: 18rem;">
            <img class="card-img-top" src="@GetBookImgSource(book)" height="325"/>
            <div class="card-body">
                <h3 class="card-title">@book.Title</h3>
            </div>
            <div class="card-body">
                <p class="card-text h5">@book.Author</p>
            </div>
            <div class="card-body">
                <p class="card-text h5">@book.Genre</p>
            </div>
            <div class="card-body">
                <p class="card-text h5">@book.PublicationYear</p>
            </div>
            <div class="card-body d-flex flex-wrap justify-content-between align-items-center">
                <p class="card-text h5 align-self-center">@book.Price€</p>
                <ButtonCompra BookTitle="@book.Title"/>
            </div>
        </div>
    }
</div>


@code {
    public List<BookDTO> books = new Books().books;
    public BookGenre selectedGenre = BookGenre.All;

    public IEnumerable<BookDTO> FilteredBooks()
    {
        if (selectedGenre == BookGenre.All)
        {
            return books;
        }
        else
        {
            return books.Where(book => book.Genre == selectedGenre);
        }
    }

    public string FormatearGenero(string genero)
    {
        if (string.IsNullOrWhiteSpace(genero))
        {
            return string.Empty;
        }

        string generoFormateado = "";
        foreach (char c in genero)
        {
            if (char.IsUpper(c))
            {
                generoFormateado += " "; // Añade un espacio antes de la letra mayúscula
            }
            generoFormateado += c;
        }

        // Capitaliza la primera letra y convierte el resto a minúsculas
        generoFormateado = generoFormateado.Trim().ToLower();
        generoFormateado = char.ToUpper(generoFormateado[0]) + generoFormateado.Substring(1);

        return generoFormateado;
    }

    public string GetBookImgSource(BookDTO bookDTO)
    {
        var formatedTitle = bookDTO.Title;
        foreach (char c in new char[] { ':' })
        {
            formatedTitle = formatedTitle.Replace(c.ToString(), "");
        }
        return $"img\\books\\{formatedTitle}.png";
    }
}